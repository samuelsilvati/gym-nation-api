// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  exercise      Exercise[]
  ExerciseOrder ExerciseOrder[]
  role          String          @default("USER") // USER, ADMIN
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?       @default(now()) @updatedAt
}

model DayOfWeek {
  id        Int        @id @default(autoincrement())
  name      String
  exercises Exercise[]
}

model MuscleGroup {
  id           Int            @id @default(autoincrement())
  name         String
  exercises    Exercise[]
  ExercisesLib ExercisesLib[]
}

model Exercise {
  id             String          @id @default(uuid())
  name           String
  description    String?
  sets           String
  reps           String
  userId         String
  user           User?           @relation(fields: [userId], references: [id])
  exercisesLibId String?
  exercisesLib   ExercisesLib?   @relation(fields: [exercisesLibId], references: [id], onDelete: SetNull)
  muscleGroupId  Int
  muscleGroup    MuscleGroup     @relation(fields: [muscleGroupId], references: [id])
  dayOfWeekId    Int
  dayOfWeek      DayOfWeek       @relation(fields: [dayOfWeekId], references: [id])
  ExerciseOrder  ExerciseOrder[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime?       @updatedAt
}

model ExercisesLib {
  id            String      @id @default(uuid())
  name          String
  description   String?
  muscleGroupId Int
  muscleGroup   MuscleGroup @relation(fields: [muscleGroupId], references: [id])
  Exercise      Exercise[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
}

model ExerciseOrder {
  id         Int      @id @default(autoincrement())
  userId     String
  exerciseId String
  order      Int
  user       User     @relation(fields: [userId], references: [id])
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
}
